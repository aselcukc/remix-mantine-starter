{
  "version": 3,
  "sources": ["../../../app/components/Welcome/Welcome.module.css", "../../../app/components/Welcome/Welcome.tsx", "../../../app/components/ColorSchemeToggle/ColorSchemeToggle.tsx", "../../../app/routes/_index.tsx"],
  "sourcesContent": ["export default {\"title\":\"Welcome-module__title__c0U9n\"};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/Welcome/Welcome.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/Welcome/Welcome.tsx\");\n}\n// REMIX HMR END\n\nimport { Title, Text, Anchor } from '@mantine/core';\nimport classes from './Welcome.module.css';\nexport function Welcome() {\n  return <>\n      <Title className={classes.title} ta=\"center\" mt={100}>\n        Welcome to{' '}\n        <Text inherit variant=\"gradient\" component=\"span\" gradient={{\n        from: 'pink',\n        to: 'yellow'\n      }}>\n\n          Mantine\n        </Text>\n      </Title>\n      <Text color=\"dimmed\" ta=\"center\" size=\"lg\" maw={580} mx=\"auto\" mt=\"xl\">\n        This starter Remix project includes a minimal setup for server side\n        rendering, if you want to learn more on Mantine + Remix integration\n        follow{' '}\n        <Anchor href=\"https://mantine.dev/guides/remix/\" size=\"lg\">\n          this guide\n        </Anchor>\n        . To get started edit index.tsx file.\n      </Text>\n    </>;\n}\n_c = Welcome;\nvar _c;\n$RefreshReg$(_c, \"Welcome\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ColorSchemeToggle/ColorSchemeToggle.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ColorSchemeToggle/ColorSchemeToggle.tsx\");\n  import.meta.hot.lastModified = \"1698320871000\";\n}\n// REMIX HMR END\n\n'use client';\nimport { Button, Group, useMantineColorScheme } from '@mantine/core';\nexport function ColorSchemeToggle() {\n  _s();\n  const {\n    setColorScheme\n  } = useMantineColorScheme();\n  return <Group justify=\"center\" mt=\"xl\">\n      <Button onClick={() => setColorScheme('light')}>Light</Button>\n      <Button onClick={() => setColorScheme('dark')}>Dark</Button>\n      <Button onClick={() => setColorScheme('auto')}>Auto</Button>\n    </Group>;\n}\n_s(ColorSchemeToggle, \"CkdG1xG85P/RIjBDC1XlYPQzk8c=\", false, function () {\n  return [useMantineColorScheme];\n});\n_c = ColorSchemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ColorSchemeToggle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1698523069911.213\";\n}\n// REMIX HMR END\n\nimport { Welcome } from '~/components/Welcome/Welcome';\nimport { ColorSchemeToggle } from '~/components/ColorSchemeToggle/ColorSchemeToggle';\nimport { Link } from '@remix-run/react';\nimport { Flex } from '@mantine/core';\nexport const meta = () => {\n  return [{\n    title: 'Mantine Remix App'\n  }, {\n    name: 'description',\n    content: 'Welcome to Mantine!'\n  }];\n};\nexport default function Index() {\n  return <div>\n      <Welcome />\n      <ColorSchemeToggle />\n      <Flex justify=\"center\" mt=\"20\">\n        <Link to=\"/admin/dashboard\">Dashboard</Link>\n      </Flex>\n    </div>;\n}\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
